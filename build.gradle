// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'build-config.gradle'

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.72"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

Properties properties = new Properties()
InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream();
properties.load(inputStream)
String reactNodeModule = project.projectDir.path + properties.getProperty('reactnodemodule.dir')
String reactNativeDist = project.projectDir.path + properties.getProperty('reactnativedist.dir')
println(reactNodeModule)
println(reactNativeDist)

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://developer.huawei.com/repo/' }
        maven { url "https://jitpack.io" }
        maven {
            // All of React Native (JS, Android binaries) is installed from npm
            // url properties.getProperty('reactnative.dir')
            url(reactNodeModule)
        }
        maven {
            // Android JSC is installed from npm
            url(reactNativeDist)
        }

        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven {
            credentials {
                username '633402a80bdb33a273af19d9'
                password 'Td2ccL9NNLm-'
            }
            url 'https://packages.aliyun.com/maven/repository/2286124-release-1d6Qi3/'
        }
        maven {
            credentials {
                username '633402a80bdb33a273af19d9'
                password 'Td2ccL9NNLm-'
            }
            url 'https://packages.aliyun.com/maven/repository/2286124-snapshot-J8DIRD/'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}